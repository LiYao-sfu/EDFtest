% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate.regression.R
\name{estimate.regression}
\alias{estimate.regression}
\alias{estimate.normal.regression}
\alias{estimate.gamma.regression}
\alias{estimate.exp.regression}
\alias{estimate.logistic.regression}
\alias{estimate.laplace.regression}
\alias{estimate.weibull.regression}
\alias{estimate.extremevalue.regression}
\title{Estimate Regression Model Parameters}
\usage{
estimate.normal.regression(y, x, fit, fit.intercept = TRUE)

estimate.gamma.regression(y, x, fit, fit.intercept = TRUE, link = "log")

estimate.exp.regression(y, x, fit, fit.intercept = TRUE, link = "log")

estimate.logistic.regression(y, x, fit, fit.intercept = TRUE, detail = FALSE)

estimate.laplace.regression(y, x, fit.intercept = TRUE)

estimate.weibull.regression(y, x, fit.intercept = TRUE)

estimate.extremevalue.regression(y, x, fit.intercept = TRUE)
}
\arguments{
\item{y}{A univariate response.}

\item{x}{A design matrix which is not expected to have a column of 1s.}

\item{fit.intercept}{Logical; if TRUE, an intercept term is added.}
}
\value{
Estimated dispersion or sd or scale or inverse dispersion and coefficients of a linear regression.
}
\description{
\code{estimate.normal.regression} fits a standard linear model by OLS (ordinary least square);
\code{estimate.laplace.regression} fits a standard linear model by LAD (least absolute deviations);
the scale parameter is estimated by maximum likelihood.
\code{estimate.logistic.regression} fits a standard linear model by maximum likelihood when the errors
are modeled as having a logistic distribution.
\code{estimate.extremevalue.regression} fits a standard linear model by maximum likelihood when the errors
are modeled as having an extreme value distribution with standard cdf given by  F(x) = exp(-exp(x)) .
\code{estimate.weibull.regression} fits a Weibull model by maximum likelihood when the log of 
scale parameter is linearly predicted.  The procedure is equivalent to taking logs and doing extreme value
regression as above.
\code{estimate.gamma.regression} estimate the parameters in a Gamma regression model
which fits link(E(y))= x beta.  "link" must be one of "log","identity", "inverse".
A Gamma glm gets initial estimates which are improved by Maximum Likelihood.
\code{estimate.exp.regression} estimate the parameters in an exponential regression model
which fits link(E(y))= x beta.  "link" must be one of "log","identity", "inverse".
A Gamma glm is used for fitting.
}
\examples{
n = 500
p = 3
beta = c(1,2,3)
x = rnorm(n*(p-1))
x = c(rep(1,n),x)
x = matrix(x,n,p)

# OLS regression
mean = x\%*\%(beta)
#apply the link to get the mean
#generate data with that mean,

sd = 2
y =rnorm(n,mean=mean,sd=sd)
estimate.normal.regression(y=y,x=x)

# LAD regression
library(L1pack)
y =L1pack::rlaplace(n=n, location=mean, scale=sd)
estimate.laplace.regression(y=y,x=x,FALSE)

# Gamma regression
alpha = 3
scale=exp(x \%*\% beta) / alpha
y =rgamma(n=n,shape=alpha,scale=scale)
estimate.gamma.regression(y=y,x=x,intercept=FALSE)

# Exponential regression
y =rexp(n=n,rate=1/exp(mean))
estimate.exp.regression(y=y,x=x)

# Weibull regression
y = rweibull(n=n,shape=1,scale=exp(mean))
estimate.weibull.regression(y=y,x=x)

# Extreme Value regression
y = log(rweibull(n=n,shape=1,scale=exp(mean)))
estimate.extremevalue.regression(y=y,x=x)

# Logistic regression
y = rlogis(n=n,location=mean,scale=2)
estimate.logistic.regression(y=y,x=x)



}
\seealso{

}
